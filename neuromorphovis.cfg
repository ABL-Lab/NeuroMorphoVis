####################################################################################################
# Copyright (c) 2016 - 2018, EPFL / Blue Brain Project
#               Marwan Abdellah <marwan.abdellah@epfl.ch>
#
# This file is part of NeuroMorphoVis <https://github.com/BlueBrain/NeuroMorphoVis>
#
# This library is free software; you can redistribute it and/or modify it under the terms of the
# GNU Lesser General Public License version 3.0 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License along with this library;
# if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA 02110-1301 USA.
####################################################################################################

####################################################################################################
### INPUT PARAMETERS
####################################################################################################
# Blender executable
# By default, we will use the system-installed Blender, otherwise you can use a custom version
# BLENDER_EXECUTABLE=blender
BLENDER_EXECUTABLE=/gpfs/bbp.cscs.ch/project/proj3/resources/blender/blender-2.76b/blender

# Input source
# Use ['file'] for loading .H5 or .SWC morphology files
# Use ['directory'] for loading a directory contains .H5 or .SWC morphology files
# Use ['gid'] for loading a single neuron in a BBP circuit (works only on BBP clusters)
# Use ['target'] for loading a target (group of GIDs) in a BBP circuit (works only on BBP clusters)
INPUT=target

# Blue config
# A BBP circuit config required only if INPUT is set to 'target' or 'gid', otherwise ignored.
# BLUE_CONFIG=SOME_BLUE_CONFIG
BLUE_CONFIG=/gpfs/bbp.cscs.ch/project/proj3/resources/circuits/exemplars/blue_config

# A BBP cell target (or group of GIDs), if INPUT is set to 'target', otherwise ignored.
# TARGET=SOME_TARGET
TARGET=Exemplars-1-Sample

# A BBP neuron GID, if INPUT is set to 'gid', otherwise ignored.
GID=SOME_GID

# Morphology file, if INPUT is set to 'file', otherwise ignored.
# MORPHOLOGY_FILE=SOME_MORPHOLOGY_FILE
MORPHOLOGY_FILE=/home/abdellah/Desktop/nmv-tests/input/C010398B-I4_cor_-_Scale_x1.000_y1.050_z1.000_-_Clone_5.h5

# Morphology directory, if INPUT is set to 'directory', otherwise ignored.
MORPHOLOGY_DIRECTORY=SOME_MORPHOLOGY_DIRECTORY

####################################################################################################
### OUTPUT PARAMETERS
####################################################################################################
# Output directory
# This is where all the results (somata, morphologies, meshes, images, etc...) will be generated
# OUTPUT_DIRECTORY=SOME_OUTPUT_DIRECTORY
OUTPUT_DIRECTORY=/gpfs/bbp.cscs.ch/project/proj3/resources/exemplars-spines

####################################################################################################
# EXECUTION PARAMETERS
####################################################################################################
# Execution node
# Use ['local'] for running the framework on your machine
# Use ['cluster'] for running the framework on the BBP visualization cluster
EXECUTION_NODE=cluster

# Jobs granularity: This option is valid only for 'cluster' execution
# Use ['high] for rendering
# Use ['low'] for generating huge number of meshes
JOBS_GRANULARITY=low

# Number of cores that will be used to create the meshes if the granularity is low
NUMBER_CORES=320

####################################################################################################
# MORPHOLOGY / SOMA SKELETON PARAMETERS
####################################################################################################
# Reconstruct morphology skeleton to export it later, 'yes/no'
RECONSTRUCT_MORPHOLOGY_SKELETON=no

# Soma representation
# Use ['no'] to ignore the soma
# Use ['sphere'] to render the soma as a symbolic sphere
# Use ['profile'] to reconstruct a 3D profile using soft body simulation, default
SOMA_REPRESENTATION=profile

# Soma stiffness, range (0.01 - 0.99), default 0.25.
SOMA_STIFFNESS=0.25

# Soma subdivision level, convenient range (3-7), default 4.
SOMA_SUBDIVISION_LEVEL=5

# Axon building, 'yes/no'
IGNORE_AXON=no

# Basal dendrites building, 'yes/no'
IGNORE_BASAL_DENDRITES=no

# Apical dendrites building, 'yes/no'
IGNORE_APICAL_DENDRITES=no

# Spines building, 'yes/no'. This option requires a circuit or blue config file 
BUILD_SPINES=yes

# Maximum axon branching order
MAX_AXON_BRANCHING_ORDER=3

# Maximum basal dendrites branching order
MAX_BASAL_DENDRITES_BRANCHING_ORDER=100000000

# Maximum apical dendrites branching order
MAX_APICAL_DENDRITES_BRANCHING_ORDER=100000000

# Morphology reconstruction method
# Use ['connected-sections-repaired'], where sections are connected together (after repair)
# Use ['connected-sections'], where sections are connected together (without morphology repair)
# Use ['disconnected-sections'], where sections are disconnected from each others
# Use ['articulated-sections'], where sections are connected by spheres
# Use ['disconnected-segments'], where segments are disconnected
MORPHOLOGY_RECONSTRUCTION_ALGORITHM=connected-sections-repaired

# Branching method
# Use ['angles'] to connect the smallest angle branch to the parent
# Use ['radii'] to connect the largest radius branch to the parent
BRANCHING_METHOD=angles

# Sections' radii
# Use ['default'] to use the reported radii in the morphology file
# Use ['scaled'] to scale the branches with a specific scale factor RADII_SCALE_FACTOR
# Use ['fixed'] to have fixed section radius FIXED_SECTION_RADIUS for all the arbors
SET_SECTION_RADII=default

# Radii scale factor if the 'SET_SECTION_RADII=scaled' method is used, otherwise ignored
RADII_SCALE_FACTOR=1.0

# Section fixed radius value if the 'SET_SECTION_RADII=fixed' method is used, otherwise ignored
FIXED_SECTION_RADIUS=1.0

# Sections bevel sides, reflecting number of sides per cross section (4, 8, 16 or 32), by default 16
SECTION_BEVEL_SIDES=16

# Save morphology .BLEND file, 'yes/no'
EXPORT_NEURON_MORPHOLOGY_BLEND=no

# Export soma .PLY mesh, 'yes/no'
EXPORT_SOMA_MESH_PLY=no

# Save soma .OBJ mesh, 'yes/no'
EXPORT_SOMA_MESH_OBJ=no

# Save soma .STL mesh, 'yes/no'
EXPORT_SOMA_MESH_STL=no

# Save soma .BLEND mesh, 'yes/no'
EXPORT_SOMA_MESH_BLEND=no

####################################################################################################
# MESH PARAMETERS
####################################################################################################
# Reconstruct soma mesh only, 'yes/no'
RECONSTRUCT_SOMA_MESH=no

# Reconstruct the entire neuron mesh as a piecewise object, 'yes/no'
RECONSTRUCT_NEURON_MESH=yes

# Meshing technique
# Use ['piecewise-watertight'] for creating piece-wise watertight meshes
# Use ['union'] for creating watertight meshes using the Union-based meshing algorithm
# Use ['bridging'] for creating smooth branching meshes
MESHING_TECHNIQUE=piecewise_watertight

# Neuron surface
# Use ['smooth'] for smooth surface
# Use ['rough'] for rough surface
SURFACE=rough

# Neuron edges
# Use ['smooth'] for smooth edges
# Use ['hard'] for hard edges
EDGES=smooth

# Connect the soma mesh to the arbors, 'yes/no'
CONNECT_SOMA_MESH_TO_ARBORS=no

# Connect neuron objects into a single mesh, 'yes/no' 
CONNECT_NEURON_OBJECTS_INTO_SINGLE_MESH=no

# Mesh Tessellation (between 0.1 and 1.0)
TESSELLATION_LEVEL=1.0

# Export the mesh in the global coordinates, 'yes/no'
GLOBAL_COORDINATES=no

# export .PLY meshes, 'yes/no'
EXPORT_NEURON_MESH_PLY=yes

# Save .OBJ meshes, 'yes/no'
EXPORT_NEURON_MESH_OBJ=no

# Save .STL meshes, 'yes/no'
EXPORT_NEURON_MESH_STL=no

# Save mesh .BLEND file, 'yes/no'
EXPORT_NEURON_MESH_BLEND=yes

####################################################################################################
# MATERIALS PARAMETERS
####################################################################################################
# Soma color RGB in the form of 'R_G_B', for example '1.0_0.5_0.25' or '255_128_64'
SOMA_COLOR=0_0_0

# Axon color RGB in the form of 'R_G_B', for example '1.0_0.5_0.25' or '255_128_64'
AXON_COLOR=0_0_0

# Basal dendrites color RGB in the form of 'R_G_B', for example '1.0_0.5_0.25' or '255_128_64'
BASAL_DENDRITES_COLOR=0_0_0

# Apical dendrite color RGB in the form of 'R_G_B', for example '1.0_0.5_0.25' or '255_128_64'
APICAL_DENDRITE_COLOR=0_0_0

# Spines RGB in the form of 'R_G_B', for example '1.0_0.5_0.25' or '255_128_64'
SPINES_COLOR=0_0_0

# Articulations color RGB in the form of 'R_G_B', for example '1.0_0.5_0.25' or '255_128_64'
# This color is applied only for 'articulated-sections'
ARTICULATIONS_COLOR=50_115_182

# Shader, refer to the documentation to see all the shading modes and some examples 
# Use ['lambert']
# Use ['electron-light']
# Use ['electron-dark']
# Use ['super-electron-light']
# Use ['super-electron-dark']
# Use ['shadow']
# Use ['sub-surface-scattering']
# Use ['flat']
SHADER=flat

####################################################################################################
# RENDERING PARAMETERS
####################################################################################################
# Render soma profile skeleton in the XY plane, 'yes/no'
RENDER_SOMA_SKELETON=no

# Render a static frame of the final reconstructed soma mesh only, 'yes/no'
RENDER_SOMA_MESH=no

# Render a sequence of frames reflecting the progressive reconstruction of the soma mesh, 'yes/no' 
RENDER_SOMA_MESH_PROGRESSIVE=no

# Render a 360 sequence of the final reconstructed soma mesh, 'yes/no'
RENDER_SOMA_MESH_360=no

# Render a static frame of the reconstructed morphology, 'yes/no'
RENDER_NEURON_MORPHOLOGY=no

# Render a 360 sequence of the reconstructed morephology skeleton, 'yes/no'
RENDER_NEURON_MORPHOLOGY_360=no

# Render a sequence of frames reflecting the progressive reconstruction of the skeleton, 'yes/no' 
RENDER_NEURON_MORPHOLOGY_PROGRESSIVE=no

# Render a static frame of the reconstructed mesh of the neuron, 'yes/no'
RENDER_NEURON_MESH=yes

# Render a 360 sequence of the reconstructed neuron mesh, 'yes/no'
RENDER_NEURON_MESH_360=no

# The rendering view 
# Use ['wide-shot'] to render the whole view (wide-shot) of the morphology including all of its arbors
# Use ['mid-shot'] to render the reconstructed components only
# Use ['close-up'] to render a close-up around the soma with a given dimensions
RENDERING_VIEW=close-up

# Renders a frame to scale that is a factor of the largest dimension of the morphology, 'yes/no'
RENDER_TO_SCALE=no

# Frame resolution, only used if RENDER_TO_SCALE is set to no 
FULL_VIEW_FRAME_RESOLUTION=1024

# Frame scale factor (only in case of RENDER_TO_SCALE is set to yes), default = 1.0
FULL_VIEW_SCALE_FACTOR=10.0

# Close up frame resolution
CLOSE_UP_FRAME_RESOLUTION=1024

# Close up view dimensions (in microns)
CLOSE_UP_VIEW_DIMENSIONS=25

# Camera view
# Use ['front'] for the front view
# Use ['side'] for the side view
# Use ['top'] for the top view
CAMERA_VIEW=front

####################################################################################################
# ANALYSIS PARAMETERS
####################################################################################################
# Analyse the morphology skeleton, 'yes/no'
ANALYZE_MORPHOLOGY_SKELETON=no
